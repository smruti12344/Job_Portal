package com.DAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import com.Bean.*;
import com.DB.*;
public class ViewJobDAO {
	
		public ArrayList<JobBean> al = new ArrayList<JobBean>();
	public ArrayList<JobBean> retrive(){
		
		try {
			//load db-connection
			Connection con = DBConnection.getCon();
			//prepare queries to retrived data from db
			PreparedStatement ps = con.prepareStatement("select * from job order by id desc");
			
			
			ResultSet rs = ps.executeQuery();
			while(rs.next()) {
				//ProductBean-obj
				JobBean job = new JobBean();
				//set data from ps to job
				job.setId(rs.getInt(1));
				job.setTitle(rs.getString(2));
				job.setDescriPtion(rs.getString(3));
				job.setCatagory(rs.getString(4));
				job.setStatus(rs.getString(5));
				job.setLocation(rs.getString(6));
				job.setpDate(rs.getTimestamp(7)+"");
				al.add(job);//adding job to al
			}//end of loop
			//add job to arr-obj
			
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return al;
	}
	
//	Active jobs only
	public ArrayList<JobBean> jobs = new ArrayList<JobBean>();
	public ArrayList<JobBean> activeJobs(){
		
		try {
			//load db-connection
			Connection con = DBConnection.getCon();
			//prepare queries to retrived data from db
			PreparedStatement ps = con.prepareStatement("select * from job where status=? order by id desc");
			
			ps.setString(1, "active");
			ResultSet rs = ps.executeQuery();
			while(rs.next()) {
				//ProductBean-obj
				JobBean job = new JobBean();
				//set data from ps to job
				job.setId(rs.getInt(1));
				job.setTitle(rs.getString(2));
				job.setDescriPtion(rs.getString(3));
				job.setCatagory(rs.getString(4));
				job.setStatus(rs.getString(5));
				job.setLocation(rs.getString(6));
				job.setpDate(rs.getTimestamp(7)+"");
				jobs.add(job);//adding job to al
			}//end of loop
			//add job to arr-obj
			
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return jobs;
	}
	
	//Single_job by id
	public JobBean single_job =null;
public JobBean singleJobs(int id){
		
		try {
			//load db-connection
			Connection con = DBConnection.getCon();
			//prepare queries to retrived data from db
			PreparedStatement ps = con.prepareStatement("select * from job where id=? ");
			
			ps.setInt(1, id);
			ResultSet rs = ps.executeQuery();
			while(rs.next()) {
				//ProductBean-obj
				JobBean job = new JobBean();
				//set data from ps to job
				job.setId(rs.getInt(1));
				job.setTitle(rs.getString(2));
				job.setDescriPtion(rs.getString(3));
				job.setCatagory(rs.getString(4));
				job.setStatus(rs.getString(5));
				job.setLocation(rs.getString(6));
				job.setpDate(rs.getTimestamp(7)+"");
				single_job = job;
			}//end of loop
			//add job to arr-obj
			
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return single_job;
	}

//get job by _loc and cat

//public ArrayList<JobBean> alljobs = new ArrayList<JobBean>();
//public ArrayList<JobBean> getJobByLocAndCat(String loc,String cat){
//	
//	try {
//		//load db-connection
//		Connection con = DBConnection.getCon();
//		//prepare queries to retrived data from db
//		PreparedStatement ps =null;
//		if(loc==null && cat==null) {
//			 ps = con.prepareStatement("select * from job order by id desc");
//		}
//		else {
//			ps = con.prepareStatement("select * from job where location=? or category=? order by id desc");
//			ps.setString(1, loc);
//			ps.setString(2, cat);
//		}
//		
//		
//		ResultSet rs = ps.executeQuery();
//		while(rs.next()) {
//			//ProductBean-obj
//			JobBean job = new JobBean();
//			//set data from ps to job
//			job.setId(rs.getInt(1));
//			job.setTitle(rs.getString(2));
//			job.setDescriPtion(rs.getString(3));
//			job.setCatagory(rs.getString(4));
//			job.setStatus(rs.getString(5));
//			job.setLocation(rs.getString(6));
//			job.setpDate(rs.getTimestamp(7)+"");
//			alljobs.add(job);//adding job to al
//		}//end of loop
//		//add job to arr-obj
//		
//		
//	} catch (SQLException e) {
//		e.printStackTrace();
//	}
//	return alljobs;
//}
public ArrayList<JobBean> getJobByLocAndCat(String loc, String cat) {
    ArrayList<JobBean> alljobs = new ArrayList<>();
    try {
        // load db-connection
        Connection con = DBConnection.getCon();
        // prepare queries to retrieve data from db
        String query;
        if (loc.equals(null) && cat.equals(null)) {
            query = "select * from job order by id desc";
        }
        
        else {
        	query = "select * from job where ";
        	if (loc != null) {
        	    query += "location=? ";
        	    if (cat != null) {
        	        query += "and ";
        	    }
        	}
        	if (cat != null) {
        	    query += "category=? ";
        	}
        	query += "order by id desc";

        }
        PreparedStatement ps = con.prepareStatement(query);
        int parameterIndex = 1;
        if (loc != null) {
            ps.setString(parameterIndex++, loc);
        }
        if (cat != null) {
            ps.setString(parameterIndex++, cat);
        }

        ResultSet rs = ps.executeQuery();
        while (rs.next()) {
            JobBean job = new JobBean();
            // set data from rs to job
            job.setId(rs.getInt(1));
            job.setTitle(rs.getString(2));
            job.setDescriPtion(rs.getString(3));
            job.setCatagory(rs.getString(4));
            job.setStatus(rs.getString(5));
            job.setLocation(rs.getString(6));
            job.setpDate(rs.getTimestamp(7) + "");
            alljobs.add(job);
        }
    } catch (SQLException e) {
        e.printStackTrace(); // Handle or log the exception as needed
    } 
//    finally {
//        // Close resources in a finally block
//        // This ensures they are closed even if an exception occurs
//        if (ps != null) {
//            try {
//                ps.close();
//            } catch (SQLException e) {
//                e.printStackTrace(); // Handle or log the exception as needed
//            }
//        }
//        // Close the connection in a finally block
//        // This ensures the connection is closed even if an exception occurs
////        if (con != null) {
////            try {
////                con.close();
////            } catch (SQLException e) {
////                e.printStackTrace(); // Handle or log the exception as needed
////            }
////        }
//    }
    return alljobs;
}


	
	}


